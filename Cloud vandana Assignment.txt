JAVA
1. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        // Create the array
        List<Integer> originalArray = new ArrayList<>();
        originalArray.add(1);
        originalArray.add(2);
        originalArray.add(3);
        originalArray.add(4);
        originalArray.add(5);
        originalArray.add(6);
        originalArray.add(7);

        // Shuffle the array
        Collections.shuffle(originalArray);

        System.out.println("Shuffled Array: " + originalArray);
    }
}





2. Enter a Roman Number as input and convert it to an integer. (Example: IX = 9)


import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        Map<Character, Integer> romanNumerals = new HashMap<>();
        romanNumerals.put('I', 1);
        romanNumerals.put('V', 5);
        romanNumerals.put('X', 10);
        romanNumerals.put('L', 50);
        romanNumerals.put('C', 100);
        romanNumerals.put('D', 500);
        romanNumerals.put('M', 1000);

        // Input from the user
        String romanNumeral = "IX"; // Replace with user input
        int integerValue = 0;

        for (int i = 0; i < romanNumeral.length(); i++) {
            char currentChar = romanNumeral.charAt(i);
            int currentValue = romanNumerals.get(currentChar);

            if (i < romanNumeral.length() - 1) {
                char nextChar = romanNumeral.charAt(i + 1);
                int nextValue = romanNumerals.get(nextChar);

                if (currentValue < nextValue) {
                    integerValue -= currentValue;
                } else {
                    integerValue += currentValue;
                }
            } else {
                integerValue += currentValue;
            }
        }

        System.out.println("Equivalent Integer Value: " + integerValue);
    }
}



3. Check if the input is pangram or not. (A pangram is a sentence that contains all the
alphabets from A to Z)



public class Main {
    public static void main(String[] args) {
        // Input from the user
        String inputSentence = "The quick brown fox jumps over the lazy dog"; // Replace with user input
        boolean isPangram = isPangram(inputSentence);

        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }
    }

    public static boolean isPangram(String sentence) {
        sentence = sentence.toLowerCase();
        boolean[] alphabet = new boolean[26];

        for (int i = 0; i < sentence.length(); i++) {
            char ch = sentence.charAt(i);

            if (Character.isLetter(ch)) {
                alphabet[ch - 'a'] = true;
            }
        }

        for (boolean isPresent : alphabet) {
            if (!isPresent) {
                return false;
            }
        }

        return true;
    }
}



JavaScript
1. Take a sentence as an input and reverse every word in that sentence.
Example - This is a sunny day > shiT si a ynnus yad.


function reverseWords(sentence) {
  // Split the sentence into words
  const words = sentence.split(' ');

  // Reverse each word and store them in an array
  const reversedWords = words.map(word => {
    return word.split('').reverse().join('');
  });

  // Join the reversed words to form a new sentence
  const reversedSentence = reversedWords.join(' ');

  return reversedSentence;
}

// Example usage:
const inputSentence = "This is a sunny day";
const reversedSentence = reverseWords(inputSentence);
console.log(reversedSentence); // Output: "sihT si a ynnus yad"




2. Perform sorting of an array in descending order.

function sortDescending(arr) {
  return arr.sort((a, b) => b - a);
}

// Example usage:
const numbers = [5, 2, 9, 1, 5, 6];
const sortedArray = sortDescending(numbers);
console.log(sortedArray); // Output: [9, 6, 5, 5, 2, 1]


HTML
1. Create a basic calculator using HTML, CSS, and JavaScript with the functionality of add,
subtract, multiply and divide. Use the following picture forreference.



<!DOCTYPE html>
<html>
<head>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
    }
    .calculator {
      width: 300px;
      margin: 50px auto;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 5px;
      background-color: #f2f2f2;
    }
    input[type="text"] {
      width: 100%;
      padding: 10px;
      font-size: 20px;
      border: none;
      border-bottom: 1px solid #ccc;
    }
    .button {
      width: 70px;
      height: 70px;
      font-size: 20px;
      margin: 5px;
      cursor: pointer;
      border: none;
      border-radius: 50%;
      background-color: #333;
      color: #fff;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <input type="text" id="result" readonly>
    <div>
      <button class="button" onclick="appendToResult('7')">7</button>
      <button class="button" onclick="appendToResult('8')">8</button>
      <button class="button" onclick="appendToResult('9')">9</button>
      
    </div>
    <div>
      <button class="button" onclick="appendToResult('4')">4</button>
      <button class="button" onclick="appendToResult('5')">5</button>
      <button class="button" onclick="appendToResult('6')">6</button>
      
    </div>
    <div>
      <button class="button" onclick="appendToResult('1')">1</button>
      <button class="button" onclick="appendToResult('2')">2</button>
      <button class="button" onclick="appendToResult('3')">3</button>
      <button class="button" onclick="operate('*')">.</button>
      <button class="button" onclick="operate('*')">0</button>
      <button class="button" onclick="operate('*')">=</button>
    </div>
    <div>
      <button class="button" onclick="appendToResult('0')">AC</button>
      <button class="button" onclick="operate('+')">+</button>
      <button class="button" onclick="operate('+')">-</button>
      <button class="button" onclick="operate('-')">/</button>
      <button class="button" onclick="calculate()">*</button>
      
    </div>
  </div>

  <script>
    let currentInput = '';
    let currentOperator = '';
    let currentResult = 0;

    function appendToResult(value) {
      currentInput += value;
      document.getElementById('result').value = currentInput;
    }

    function operate(operator) {
      if (currentInput !== '') {
        if (currentOperator !== '') {
          calculate();
        }
        currentOperator = operator;
        currentResult = parseFloat(currentInput);
        currentInput = '';
        document.getElementById('result').value = '';
      }
    }

    function calculate() {
      if (currentInput !== '') {
        const input = parseFloat(currentInput);
        switch (currentOperator) {
          case '+':
            currentResult += input;
            break;
          case '-':
            currentResult -= input;
            break;
          case '*':
            currentResult *= input;
            break;
          case '/':
            currentResult /= input;
            break;
        }
        currentInput = '';
        currentOperator = '';
        document.getElementById('result').value = currentResult;
      }
    }

    function clearResult() {
      currentInput = '';
      currentOperator = '';
      currentResult = 0;
      document.getElementById('result').value = '';
    }
  </script>
</body>
</html>


2. Create a survey form with Fields; First Name, Last Name, Date of Birth, Country
(dropdown), Gender (checkbox), Profession, email, and mobile number. All the input
fields are necessary to submit the form. Create two buttons Submit and Reset. Reset will
reset the form while clicking on submit, first, it will check all the fields and necessary
validations and then a popup will appear displaying all the selected values with labels in
front of it. On closing the popup, the form should reset all the values. Use the following
image for reference.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Survey Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .popup {
            display: none;
            background: rgba(0, 0, 0, 0.7);
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .popup-content {
            background: white;
            padding: 20px;
            border-radius: 5px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Survey Form</h1>
        <form id="survey-form">
            <div class="form-group">
                <label for="first-name">First Name:</label>
                <input type="text" id="first-name" name="first-name" required>
            </div>
            <div class="form-group">
                <label for="last-name">Last Name:</label>
                <input type="text" id="last-name" name="last-name" required>
            </div>
            <div class="form-group">
                <label for="dob">Date of Birth:</label>
                <input type="date" id="dob" name="dob" required>
            </div>
            <div class="form-group">
                <label for="country">Country:</label>
                <select id="country" name="country" required>
                    <option value="">Select Country</option>
                    <option value="usa">USA</option>
                    <option value="canada">Canada</option>
                    <option value="uk">UK</option>
                </select>
            </div>
            <div class="form-group">
                <label>Gender:</label><br>
                <input type="checkbox" id="male" name="gender" value="male"> <label for="male">Male</label>
                <input type="checkbox" id="female" name="gender" value="female"> <label for="female">Female</label>
            </div>
            <div class="form-group">
                <label for="profession">Profession:</label>
                <input type="text" id="profession" name="profession" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="mobile">Mobile Number:</label>
                <input type="tel" id="mobile" name="mobile" required>
            </div>
            <div class="form-group">
                <button type="submit" id="submit-button">Submit</button>
                <button type="reset" id="reset-button">Reset</button>
            </div>
        </form>
    </div>

    <!-- Popup for displaying submitted values -->
    <div class="popup" id="popup">
        <div class="popup-content">
            <h2>Survey Submitted</h2>
            <div id="submitted-values"></div>
            <button id="close-popup">Close</button>
        </div>
    </div>

    <script>
        const form = document.getElementById('survey-form');
        const popup = document.getElementById('popup');
        const submittedValues = document.getElementById('submitted-values');
        const closePopup = document.getElementById('close-popup');

        form.addEventListener('submit', function (e) {
            e.preventDefault();

            // Collect and display submitted values
            const formData = new FormData(form);
            let valuesHTML = '';
            formData.forEach((value, key) => {
                valuesHTML += `<p><strong>${key}:</strong> ${value}</p>`;
            });
            submittedValues.innerHTML = valuesHTML;

            // Show the popup
            popup.style.display = 'flex';
        });

        closePopup.addEventListener('click', function () {
            // Close the popup and reset the form
            popup.style.display = 'none';
            form.reset();
        });
    </script>
</body>
</html>








